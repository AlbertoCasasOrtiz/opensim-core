name: Continuous Integration

on: [push]

jobs:
  windows:
    name: Windows
    
    runs-on: windows-2019
    
    steps:
    - uses: actions/checkout@v1
    - name: Build
      run: |
        REPO=$(pwd)
        mkdir $GITHUB_WORKSPACE/build_deps && cd $GITHUB_WORKSPACE/build_deps
        cmake $REPO/dependencies -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/opensim_dependencies_install -DCMAKE_BUILD_TYPE=$BTYPE
        make --jobs 4
        mkdir $GITHUB_WORKSPACE/build && cd $GITHUB_WORKSPACE/build
        OSIM_CMAKE_ARGS=($REPO -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/opensim-core-install)
        OSIM_CMAKE_ARGS+=(-DOPENSIM_DEPENDENCIES_DIR=$GITHUB_WORKSPACE/opensim_dependencies_install)
        OSIM_CMAKE_ARGS+=(-DWITH_BTK=on)
        OSIM_CMAKE_ARGS+=(-G"Visual Studio 15 2017 Win64" -T"v141")
        printf '%s\n' "${OSIM_CMAKE_ARGS[@]}" 
        cmake "${OSIM_CMAKE_ARGS[@]}"
        cmake --build . --config Release -- /maxcpucount:4 /verbosity:quiet
    - name: Test
      run: ctest --parallel 4 --build-config Release --output-on-failure
    - name: Install
      run: cmake --build . --config Release --target install -- /maxcpucount:4 /verbosity:quiet
  
  mac:
    name: Mac

    runs-on: macOS-10.14

    steps:
    - uses: actions/checkout@v1
    - name: Install Homebrew packages
      run: |
        brew install doxygen
    - name: Build
      env:
        BTYPE: Release
      run: |
        REPO=$(pwd)
        echo 'REPO'
        ls $REPO
        echo 'GITHUB_WORKSPACE'
        ls $GITHUB_WORKSPACE
        mkdir $GITHUB_WORKSPACE/build_deps && cd $GITHUB_WORKSPACE/build_deps
        cmake $REPO/dependencies -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/opensim_dependencies_install -DCMAKE_BUILD_TYPE=$BTYPE
        make --jobs 4
        mkdir $GITHUB_WORKSPACE/build && cd $GITHUB_WORKSPACE/build
        OSIM_CMAKE_ARGS=($REPO -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/opensim-core-install -DCMAKE_BUILD_TYPE=$BTYPE)
        OSIM_CMAKE_ARGS+=(-DOPENSIM_DEPENDENCIES_DIR=$GITHUB_WORKSPACE/opensim_dependencies_install)
        printf '%s\n' "${OSIM_CMAKE_ARGS[@]}" 
        cmake "${OSIM_CMAKE_ARGS[@]}"
        make --jobs 4
    - name: Test
      run: ctest --parallel 4
    - name: Install
      run: make install

  linux:
    name: Linux
    
    runs-on: ubuntu-18.04
    
    steps:
    - uses: actions/checkout@v1
    - name: Install packages
      run: sudo apt-get install --yes liblapack-dev freeglut3-dev libxi-dev libxmu-dev
    - name: Build
      env:
        BTYPE: Release
      run: |
        REPO=$(pwd)
        mkdir $GITHUB_WORKSPACE/build_deps && cd $GITHUB_WORKSPACE/build_deps
        cmake $REPO/dependencies -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/opensim_dependencies_install -DCMAKE_BUILD_TYPE=$BTYPE
        make --jobs 4
        mkdir $GITHUB_WORKSPACE/build && cd $GITHUB_WORKSPACE/build
        OSIM_CMAKE_ARGS=($REPO -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/opensim-core-install -DCMAKE_BUILD_TYPE=$BTYPE)
        OSIM_CMAKE_ARGS+=(-DOPENSIM_DEPENDENCIES_DIR=$GITHUB_WORKSPACE/opensim_dependencies_install)
        OSIM_CMAKE_ARGS+=(-DWITH_BTK=on)
        printf '%s\n' "${OSIM_CMAKE_ARGS[@]}" 
        cmake "${OSIM_CMAKE_ARGS[@]}"
        make --jobs 4
    - name: Test
      run: ctest --parallel 4
    - name: Install
      run: make install
  
