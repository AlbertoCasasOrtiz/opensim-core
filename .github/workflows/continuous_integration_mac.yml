name: Mac

on:
  pull_request:
    branches:
      - '*'
  push:
    tags:
      - '*'

jobs:
  mac:
    name: Mac

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v1

    - name: Install Homebrew packages
      run: |
        brew install cmake pkgconfig gcc autoconf libtool automake wget pcre doxygen
        pip3 install numpy

    - name: Cache SWIG
      id: cache-swig
      uses: actions/cache@v1
      with:
        path: ~/swig
        key: ${{ runner.os }}-swig

    - name: Install SWIG
      if: steps.cache-swig.outputs.cache-hit != 'true'
      run: |
        mkdir ~/swig-source && cd ~/swig-source
        wget https://github.com/swig/swig/archive/rel-3.0.12.tar.gz
        tar xzf rel-3.0.12.tar.gz && cd swig-rel-3.0.12
        sh autogen.sh && ./configure --prefix=$HOME/swig --disable-ccache
        make && make -j4 install

    - name: Update submodules
      run: git submodule update --init

    - name: Cache dependencies
      id: cache-dependencies
      uses: actions/cache@v1
      with:
        path: ~/moco_dependencies_install
        # TODO: avoid having to copy over the opensim-core commit hash.
        key: ${{ runner.os }}-dependencies-${{ hashFiles('dependencies/*') }}
        restore-keys: |
          ${{ runner.os }}-dependencies-
            
    - name: Build dependencies
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      run: |
        mkdir $GITHUB_WORKSPACE/build_deps
        cd $GITHUB_WORKSPACE/build_deps
        DEP_CMAKE_ARGS=($GITHUB_WORKSPACE/dependencies)
        DEP_CMAKE_ARGS+=(-DCMAKE_BUILD_TYPE=Release)
        DEP_CMAKE_ARGS+=(-DCMAKE_INSTALL_PREFIX=~/moco_dependencies_install)
        DEP_CMAKE_ARGS+=(-DOPENSIM_JAVA_WRAPPING=on -DOPENSIM_PYTHON_WRAPPING=on)
        DEP_CMAKE_ARGS+=(-DSWIG_EXECUTABLE=$HOME/swig/bin/swig)
        DEP_CMAKE_ARGS+=(-DCMAKE_OSX_DEPLOYMENT_TARGET=10.10)
        printf '%s\n' "${DEP_CMAKE_ARGS[@]}"
        cmake "${DEP_CMAKE_ARGS[@]}"
        make -j4 ipopt
        make -j4

    - name: Configure Moco
      id: configure-moco
      run: |
        mkdir $GITHUB_WORKSPACE/build
        cd $GITHUB_WORKSPACE/build
        MOCO_CMAKE_ARGS=($GITHUB_WORKSPACE)
        DEP_CMAKE_ARGS+=(-DCMAKE_BUILD_TYPE=Release)
        MOCO_CMAKE_ARGS+=(-DCMAKE_INSTALL_PREFIX=~/opensim-moco)
        MOCO_CMAKE_ARGS+=(-DMOCO_DEPENDENCIES_DIR=~/moco_dependencies_install)
        MOCO_CMAKE_ARGS+=(-DMOCO_JAVA_BINDINGS=on -DMOCO_PYTHON_BINDINGS=on)
        MOCO_CMAKE_ARGS+=(-DSWIG_EXECUTABLE=$HOME/swig/bin/swig)
        MOCO_CMAKE_ARGS+=(-DCMAKE_OSX_DEPLOYMENT_TARGET=10.10)
        printf '%s\n' "${MOCO_CMAKE_ARGS[@]}"
        cmake "${MOCO_CMAKE_ARGS[@]}"
        cmake . -LAH
        VERSION=`cmake -L . | grep MOCO_FULL_VERSION | cut -d "=" -f2`
        echo $VERSION
        echo "::set-env name=VERSION::$VERSION"
        echo "::set-output name=version::$VERSION"
        
    - name: Build Moco
      run: |
        cd $GITHUB_WORKSPACE/build
        make -j4
 
    - name: Test Moco
      run: |
        cd $GITHUB_WORKSPACE/build
        ctest -j4 --output-on-failure
 
    - name: Install Moco
      run: |
        cd $GITHUB_WORKSPACE/build
        make Moco_doxygen
        make -j4 install
        
        cd $GITHUB_WORKSPACE
        mv ~/opensim-moco opensim-moco-${VERSION}
        zip --symlinks --recurse-paths --quiet opensim-moco-$VERSION.zip opensim-moco-${VERSION}
 
    - name: Upload Moco
      uses: actions/upload-artifact@v1.0.0
      with:
        # Does this ZIP preserve symlinks?
        # The upload-artifact zipping does not preserve symlinks or executable
        # bits. So we zip ourslves, even though this causes a double-zip.
        name: opensim-moco-${{ steps.configure-moco.outputs.version }}-mac
        path: opensim-moco-${{ steps.configure-moco.outputs.version }}.zip

    # - name: Create release
    #   id: create-release
    #   uses: actions/create-release@v1.0.0
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     tag_name: ${{ github.ref }}
    #     release_name: OpenSim Moco ${{ steps.configure-moco.outputs.version }}
    #     draft: true
    #     prerelease: false

    # - name: Zip Moco
    #   run: |
    #     zip --symlinks --recurse-paths --quiet opensim-moco-$VERSION.zip opensim-moco-${VERSION}

    # - name: Upload release asset
    #   id: upload-release-asset 
    #   uses: actions/upload-release-asset@v1.0.1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create-release.outputs.upload_url }}
    #     asset_path: ./opensim-moco-${{ steps.configure-moco.outputs.version }}.zip
    #     asset_name: opensim-moco-${{ steps.configure-moco.outputs.version }}.zip
    #     asset_content_type: application/zip



