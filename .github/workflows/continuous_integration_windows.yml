name: Windows

# TODO: build master branch after PRs are merged.
# syntax https://help.github.com/en/articles/workflow-syntax-for-github-actions
on: pull_request

# TODO: use "-A x64" and VS 2019.
    
jobs:
  windows:
    name: Windows

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v1

#    - name: Install NumPy 
#      run: python -m pip install numpy
#
#    - name: Install SWIG
#      run: choco install swig --version 3.0.9 --yes --limit-output 
#
#    - name: Install Doxygen
#      # choco install doxygen.portable # <-- too unreliable.
#      run: |
#        (New-Object System.Net.WebClient).DownloadFile("https://sourceforge.net/projects/myosin/files/doxygen-1.8.14.windows.x64.bin.zip/download", "C:\doxygen.zip")
#        7z x C:\\doxygen.zip -oC:\\doxygen

    - name: Update submodules
      run: git submodule update --init

    - name: Cache dependencies
      id: cache-dependencies
      uses: actions/cache@v1
      with:
        path: $env:GITHUB_WORKSPACE/moco_dependencies_install
        # TODO: avoid having to copy over the opensim-core commit hash.
        key: ${{ runner.os }}-dependencies-${{ hashFiles('dependencies/*') }}
        restore-keys: |
          ${{ runner.os }}-dependencies-

    - name: Build dependencies
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      run: |
        git submodule update --init
        echo $env:GITHUB_WORKSPACE\\build_deps
        mkdir $env:GITHUB_WORKSPACE\\build_deps
        chdir $env:GITHUB_WORKSPACE\\build_deps
        pwd
        cmake --version
        # /W0 disables warnings. The other flags are copied from CMake's
        # default CMAKE_CXX_FLAGS.
        # https://msdn.microsoft.com/en-us/library/19z1t1wy.aspx
        cmake $env:GITHUB_WORKSPACE\\dependencies
        cmake . -LAH
#        cmake $env:GITHUB_WORKSPACE\\dependencies -G"Visual Studio 15 2017 Win64" -DCMAKE_INSTALL_PREFIX=$env:GITHUB_WORKSPACE\\moco_dependencies_install -DCMAKE_CXX_FLAGS="/DWIN32 /D_WINDOWS /W0 /GR /EHsc" -DOPENSIM_JAVA_WRAPPING=on -DOPENSIM_PYTHON_WRAPPING=on
#        cmake . -LAH
#        cmake --build . --config Release -- /maxcpucount:4 
      shell: pwsh -File {0}

    - name: Build Moco
      run: |
        mkdir $env:GITHUB_WORKSPACE\\build 
        chdir $env:GITHUB_WORKSPACE\\build
        # TODO: Can remove /WX when we use that in CMakeLists.txt.
        cmake -E env CXXFLAGS="/WX" cmake $env:GITHUB_WORKSPACE -G"Visual Studio 15 2019 Win64" -DCMAKE_INSTALL_PREFIX=$env:GITHUB_WORKSPACE\\opensim-core-install -DBUILD_PYTHON_WRAPPING=on -DBUILD_JAVA_WRAPPING=on -DDOXYGEN_EXECUTABLE=C:\\doxygen
        cmake . -LAH
        cmake --build . --config Release -- /maxcpucount:4 /verbosity:minimal

    - name: Test Moco
      run: |
        chdir $env:GITHUB_WORKSPACE\\build
        ctest --parallel 4 --output-on-failure --build-config Release

    - name: Install Moco
      run: |
        chdir $env:GITHUB_WORKSPACE\\build
        cmake --build . --config Release --target install -- /maxcpucount:4 /verbosity:quiet

    # TODO: Fix name of the path to use tag/version.
    # Use {{ github.ref }}
    # https://help.github.com/en/actions/automating-your-workflow-with-github-actions/contexts-and-expression-syntax-for-github-actions
    - name: Upload Moco
      uses: actions/upload-artifact@v1.0.0
      with:
        name: opensim-moco
        path: C:\\opensim-moco.zip

    - name: Upload Moco dependencies
      uses: actions/upload-artifact@v1.0.0
      with:
        name: opensim-moco-dependencies 
        path: C:\\opensim-moco-dependencies.zip
