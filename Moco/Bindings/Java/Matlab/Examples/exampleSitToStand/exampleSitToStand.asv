function exampleSitToStand

import org.opensim.modeling.*;


moco = configureBaseMocoTool();
problem = moco.updProblem();

problem.setModel(createModel('torques'));

problem.addCost(MocoControlCost());


moco.solve();

end

function [moco] = configureBaseMocoTool()

import org.opensim.modeling.*;

moco = MocoTool();

problem = moco.updProblem();

problem.setModel(createModel('torques'));

problem.setStateInfo('/jointset/hip_r/hip_flexion_r/value', ...
    MocoBounds(-2, 0.5), MocoInitialBounds(-2), MocoFinalBounds(0));
problem.setStateInfo('/jointset/knee_r/knee_angle_r/value', ...
    [-2, 0], -2, 0);
problem.setStateInfo('/jointset/ankle_r/ankle_angle_r/value', ...
    [-0.5, 0.7], -0.5, 0);

solver = moco.initCasADiSolver();
solver.set_num_mesh_points(25);
solver.set_dynamics_mode('implicit');
solver.set_optim_convergence_tolerance(1e-4);
solver.set_optim_constraint_tolerance(1e-4);
solver.set_optim_solver('ipopt');
solver.set_transcription_scheme('hermite-simpson');
solver.set_enforce_constraint_derivatives(true);
solver.set_optim_hessian_approximation('limited-memory');

end

function [model] = createModel(actuatorType) 

import org.opensim.modeling.*;

model = Model('sitToStand_3dof_9musc.osim');

if strcmp(actuatorType, 'torques')
%     removeMuscles(model);
    addCoordinateActuator(model, 'hip_flexion_r', 250);
    addCoordinateActuator(model, 'knee_angle_r', 500);
    addCoordinateActuator(model, 'ankle_angle_r', 250);
elseif strcmp(actuatorType, 'muscles')
    % do nothing
else
    error(['Actuator type ' actuatorType ' not valid.']);
end

end

function addCoordinateActuator(model, coordName, optForce)

import org.opensim.modeling.*;

coordSet = model.updCoordinateSet();

actu = CoordinateActuator();
actu.setName(['tau_' coordName]);
actu.setCoordinate(coordSet.get(coordName));
actu.setOptimalForce(optForce);
actu.setMinControl(-1);
actu.setMaxControl(1);

model.addComponent(actu);

end

function removeMuscles(model)

numMuscs = model.getForceSet().getSize();
indices = zeros(numMuscs
for m = 1:numMuscs
   musc = model.getForceSet().get(m);
   index = model.getForceSet().getIndex(musc, 0);
end

end